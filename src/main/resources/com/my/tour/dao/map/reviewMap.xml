<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE mapper PUBLIC './/mybatis.org//DTD Mapper 3.0//EN'
	'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace='com.my.tour.dao.map.ReviewMap'>
	<select id='selectReviews' resultType='review'>
		select review_num, review_title, review_content, score, review_date,
				user_id, tour_num
		from reviews
		<where>
			review_exposure = 'Y'
			<if test='resvNum != null'>
				and resv_num = #{resvNum}
			</if>
		</where>
		order by review_num desc
	</select>
	
	<select id='selectReview' resultType='reviewDto'>
		select review_num, tour_name, review_title, review_content, score, review_date, user_id
		from reviews join tours
		using (tour_num)
		<where>
			<if test='reviewNum != null'>
				and review_num = #{reviewNum}
			</if>
			<if test='tourNum != null'>
				and tour_num = #{tourNum}
			</if>
		</where>
		order by review_num desc
	</select>
	
	<select id='selectMyReviews' resultType='reviewDto'>
		select review_num, tour_name, review_title, score, review_date, user_id, tour_num
		from reviews join tours
		using (tour_num)
		where user_id = #{userId}
		order by review_num desc
	</select>
	
	<select id='selectMyReview' resultType='reviewDto'>
		select review_num, tour_name, review_title, score, review_date, user_id, tour_num
		from reviews join tours
		using (tour_num)
		where user_id = #{userId}
			and tour_num = #{tourNum}
		order by review_num desc
	</select>
	
	<insert id='insertReview'>
		insert into reviews(review_num, review_title, review_content, score, 
		         review_date, user_id, tour_num, resv_num)
		values(review_num_seq.nextval, #{reviewTitle}, #{reviewContent}, #{score},
				to_char(sysdate, 'YYYY-MM-DD'), #{userId}, #{tourNum}, #{resvNum})
	</insert>	
	
	<update id='updateReview'>
		update reviews
		set review_title = #{reviewTitle}, review_content = #{reviewContent}, score = #{Score}
		where review_num = #{reviewNum}
	</update>	
	
	<delete id='deleteReview'>
		delete reviews
		where review_num = #{reviewNum}
	</delete>
</mapper>